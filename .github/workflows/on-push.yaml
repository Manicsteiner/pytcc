name: Build pytcc and run unittests
on: [push]

jobs:

  ###################################################
  build:

    strategy:
      fail-fast: false
      matrix:
        python: [3.8, "3.10", 3.12]
        os: [windows-2019, windows-latest, ubuntu-20.04, ubuntu-latest]
        arch: [x64]
        exclude:
          # manylinux github action does not support 3.11 yet
          - os: ubuntu-20.04
            python: 3.12

    runs-on: ${{matrix.os}}

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{matrix.python}}
          architecture: ${{matrix.arch}}

      - name: Build Wheel for Manylinux2014
        if: startsWith(matrix.os, 'ubuntu')
        uses: RalfG/python-wheels-manylinux-build@v0.5.0-manylinux2014_x86_64
        with:
          pre-build-command: 'bash .github/workflows/build-libtcc.sh ${{matrix.os}} ${{matrix.arch}}'
          python-versions: '${{ fromJson(''{"3.8": "cp38-cp38", "3.10": "cp310-cp310", "3.12": "cp312-cp312"}'')[matrix.python] }}'
          build-requirements: cython
          pip-wheel-args: '-w ./wheels --no-deps'

      - name: Build Wheel for Windows
        if: startsWith(matrix.os, 'windows')
        shell: bash
        run: |
          bash .github/workflows/build-libtcc.sh  ${{matrix.os}} ${{matrix.arch}}
          python -m pip wheel -w wheels .

      - name: Run Unittests
        shell: bash
        run: |
          pip install -f wheels pytcc pytest
          pytest

      - name: Store Binary Wheel
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: |
            wheels/pytcc-*.whl
            !wheels/pytcc-*-linux_*.whl

